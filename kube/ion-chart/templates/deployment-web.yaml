---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ion.fullname" . }}-web
  labels:
    {{- include "ion.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "ion.name" . }}-web
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        app.kubernetes.io/name: {{ include "ion.name" . }}-web
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "ion.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-web
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          imagePullPolicy: {{ .Values.web.image.pullPolicy }}
          image: {{.Values.web.image.repository }}:{{.Values.web.image.tag}}
          command: ["caddy", "file-server", "--listen", ":80", "-root", "/app/dist"]
          resources:
            requests:
              cpu: 250m
              memory: 200Mi
              #            limits:
              #              cpu: 500m
              #              memory: 500Mi
          env:
            - name: SERVICE
              value: web
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
          - name: web
            containerPort: 80
            protocol: TCP

